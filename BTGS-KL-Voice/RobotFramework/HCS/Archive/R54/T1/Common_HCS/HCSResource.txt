*** Settings ***
Documentation	Resource file - specific for Cloud 
Library		ExcelLibrary
Library		Selenium2Library
Library		AutoItLibrary
Library		DebugLibrary
Library		OperatingSystem
Variables	CommonRSQELocators.py
Resource	../Common_HCS/CommonResources.txt

*** Keywords ***
Create One Cloud Product
	Wait Until Page Contains	Product Family:	${waiting_time}
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Create Contract']
	Click Element	productSearch
	Click Element	xpath=.//a[normalize-space(.)='One Cloud Cisco']
	Click Button	submit
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	Capture ScreenShot	${Numbering}	Create One Cloud Cisco Product
	Click Element	continue-to-quote-details
	#Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}
	Wait Until Page Contains Element	xpath=.//tbody//td	${waiting_time}
	Wait Until Page Does Not Contain	xpath=.//td[@class='validity pending validating']	${waiting_time}
	
Migrate Product 
	Wait Until Page Contains	Product Family:	${waiting_time}
	Click Element	MigrateProducts
	Wait Until Page Contains	Product Family:	${waiting_time}
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Create Contract']
	Click Element	productSearch
	Click Element	xpath=.//a[normalize-space(.)='One Cloud Cisco']
	Click Button	submit
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	Capture ScreenShot	${Numbering}	Migrate One Cloud Cisco Product
	Click Element	continue-to-quote-details
	#Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}
	Wait Until Page Contains Element	xpath=.//tbody//td	${waiting_time}
	Wait Until Page Does Not Contain	xpath=.//td[@class='validity pending validating']	${waiting_time}
	
Create One Cloud Product - Internet Service Access
	Wait Until Page Contains	Product Family:	${waiting_time}
	Run Keyword If	'${OrderType}' == 'Modify'	Run Keywords
	...	Click Element	ModifyProducts
	...	AND	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}	
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Build Order']
	Click Element	productSearch
	Click Element	xpath=.//a[normalize-space()='Internet Service Access']
	Wait Until Element Is Not Visible	${PROCESSING_MESSAGE}	${wait_time}
	Click Button	submit
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	Capture ScreenShot	${Numbering}	Create One Cloud Cisco Product - Internet Service Access
	Run Keyword If	'${OrderType}' == 'Modify'	Run Keywords	Product Configuration	#Modify Internet Service Access	AND	Finalise Config
	...	ELSE	Click Element	continue-to-quote-details
	#Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}
	Wait Until Page Contains Element	xpath=.//tbody//td	${waiting_time}
	Wait Until Page Does Not Contain	xpath=.//td[@class='validity pending validating']	${waiting_time}

Create One Cloud Product Site - Journey
	Wait Until Page Contains	Product Family:	${waiting_time}
	Run Keyword If	'${OrderType}' == 'Modify'	Run Keywords
	...	Click Element	ModifyProducts
	...	AND	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}	
	Run Keyword If	'${OrderType}' == 'Cease'	Run Keywords
	...	Click Element	ModifyProducts
	...	AND	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}	
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Build Order']
	Click Element	productSearch
	Click Element	xpath=.//a[normalize-space(.)='One Cloud Cisco - Site']
	Click Element	xpath=(.//input[contains(@id,'s2id_autogen')])[last()]
	Click Element	xpath=.//div[@id='select2-drop']/ul/li[1]/div
	Click Button	siteGlobalSearchStateCitySiteBtn
	#Select Checkbox	xpath=.//table[@id='siteTable']//input
	Wait Until Element Is Not Visible	${PROCESSING_MESSAGE}	${waiting_time}
	Select Checkbox	xpath=//table[@id='siteTable']//td[@class='site'][text()='${BranchSiteName1}']/../td[@class='checkbox']/input
	Click Button	submit
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	Capture ScreenShot	${Numbering}	One Cloud Cisco Product
	Run Keyword If	'${OrderType}' == 'Modify'	Run Keyword	Product Configuration
	...	ELSE IF	'${OrderType}' == 'Cease'	Run Keyword	Product Configuration	#One Cloud Cisco Config Site - via CRF	AND	Configure Product OCC-HCS	AND	Finalise Config
	...	ELSE	Click Element	continue-to-quote-details
	#Run Keyword If	'${OrderType}' == 'Provide'	Run Keyword	Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}
	#...	ELSE	Wait Until Element Is Visible	xpath=.//td[contains(text(),'PENDING')]	${waiting_time}
	Wait Until Page Contains Element	xpath=.//tbody//td	${waiting_time}
	Wait Until Page Does Not Contain	xpath=.//td[@class='validity pending validating']	${waiting_time}

Remove OCC Site Config
	#Wait Until Page Contains Element	${CBOX_LIST_QUOTE_OPT_DETAILS}	${waiting_time}
	#Click Element	${CBOX_LIST_QUOTE_OPT_DETAILS}
	#Select Checkbox	listOfQuoteOptionItems
	#Wait Until Element Is Visible	bulkConfigurationButton	${waiting_time}
	Click Element	bulkConfigurationButton
	Wait Until Element Is Not Visible	${STATUS_LOADING}	${waiting_time}
	Wait Until Element Is Not Visible	${STATUS_LOADING}	${waiting_time}
	Wait Until Element Is Not Visible	${LOADING_PRODUCTS}	${waiting_time}
	Click Element	xpath=.//*[@id='grid-contents']/table/thead/tr/th[*]/div/input
	Wait Until Element Is Visible	CeaseButton	${waiting_time}
	Click Button	CeaseButton
	Wait Until Element Is Not Visible	${PERFORM_DELETING}	${waiting_time}
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Wait Until Element Is Visible	xpath=.//label[text()='Delete']	${waiting_time}
	Capture ScreenShot	${Numbering}	Product Deleted at Bulk Configuration
	Wait Until Page Contains Element	${LINK_ADMIN_SELF_SERVE}	${waiting_time}
	Click Element	${LINK_ADMIN_SELF_SERVE}
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Capture ScreenShot	${Numbering}	Product Deleted at Admin Self Serve
	Wait Until Page Contains Element	${LINK_LINE_SERVICE_OCC}	${waiting_time}
	Click Element	${LINK_LINE_SERVICE_OCC}
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Capture ScreenShot	${Numbering}	Product Deleted at Line Service OCC
	Wait Until Page Contains Element	${LINK_USER_SELF_SERVE}	${waiting_time}
	Click Element	${LINK_USER_SELF_SERVE}
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Capture ScreenShot	${Numbering}	Product Deleted at User Self Serve
	Focus	quoteOption
	Click Element	quoteOption
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Wait Until Element Is Not Visible	${PROCESSING_MESSAGE}	${waiting_time}
	
	
One Cloud Cisco Config
	Wait Until Page Contains Element	${CBOX_LIST_QUOTE_OPT_DETAILS}	${waiting_time}
	#Click Element	${CBOX_LIST_QUOTE_OPT_DETAILS}
	Select Checkbox	listOfQuoteOptionItems
	Wait Until Element Is Visible	${BTN_IMPORT_PRODUCT}	120s
	Click Element	${BTN_IMPORT_PRODUCT}
	Wait Until Page Contains	Upload work book	${waiting_time}
	Choose File	eCRFSheet	${EXECDIR}\\BCM_upload\\${BCMSheet}
	Click Element	importProductUpload
	Wait Until Page Does Not Contain	Validating Import	${waiting_time}	
	Wait Until Page Contains Element	close	${waiting_time}
	Sleep	${waiting_time}
	Capture ScreenShot	${Numbering}	Upload BCMSheet
	Click Element	close
	
One Cloud Cisco Config Site - via CRF
	Wait Until Page Contains Element	${CBOX_LIST_QUOTE_OPT_DETAILS}	${waiting_time}
	#Click Element	${CBOX_LIST_QUOTE_OPT_DETAILS}
	Select Checkbox	listOfQuoteOptionItems
	Run Keyword If	'${RsqeUploadFile}' == 'Yes'	Run Keywords
	...	Wait Until Element Is Visible	${BTN_IMPORT_PRODUCT}	120s
	...	AND	Click Element	${BTN_IMPORT_PRODUCT}
	...	AND	Wait Until Page Contains	Upload work book	${waiting_time}
	...	AND	Choose File	eCRFSheet	${EXECDIR}\\${BCMSheet}
	...	AND	Click Element	importProductUpload
	...	AND	Wait Until Page Does Not Contain	Validating Import	${waiting_time}	
	...	AND	Wait Until Page Contains Element	close	${waiting_time}
	...	AND	Sleep	${waiting_time}
	...	AND	Capture ScreenShot	${Numbering}	Upload BCMSheet
	...	AND	Click Element	close
	...	ELSE	Run Keyword	Capture ScreenShot	${Numbering}	Select Product
	#Capture Page Screenshot		${OUTPUTDIR}${/}${Numbering}-Upload BCMSheet.png
	#${Numbering}=	Evaluate	str(${Numbering}+1)
	#Click Element	close
	
Read Info From CRF File
	#${wb}=	load_workbook	${EXECDIR}\\${BCMSheet}
	#${ws}=	set variable	${wb['Line Service-OCC']}
	#${oneCloudMobileAction}=	Set Variable	${ws.cell('C3').value}
	Open Excel	${EXECDIR}\\${BCMSheet}
	${oneCloudMobileAction}=	Read Cell Data By Name	Line Service-OCC	C3
	Set Global Variable	${oneCloudMobileAction}

Configure Product OCC-HCS
	Click Element	bulkConfigurationButton
	Wait Until Page Contains Element	xpath=.//div[contains(text(),'${BranchSiteName1}')]	${waiting_time}
	Click Element	${LINE_SERVICE_OCC}
	Click Element	${LINE_SERVICE_OCC_BASE_CONFIG}
	Run Keyword If	'${OrderType}' == 'Provide'	Line Service-OCC Provide Journey
	...	ELSE	Line Service-OCC Non Provide Journey
	
Line Service-OCC Provide Journey
	${CheckColumnName}=	Run Keyword And Return Status	Table Cell Should Contain	${TABLE_BASE_CONFIG}	1	8	Line Service Action
	Run Keyword If	${CheckColumnName}	Run Keywords
	...	Table Cell Should Contain	${TABLE_BASE_CONFIG}	2	8	Add
	...	AND	Table Cell Should Contain	${TABLE_BASE_CONFIG}	2	9	${oneCloudMobileAction}
	Capture ScreenShot	${Numbering}	Line Service-OCC Provide Journey
	
Line Service-OCC Non Provide Journey
	${CheckColumnName}=	Run Keyword And Return Status	Table Cell Should Contain	${TABLE_BASE_CONFIG}	1	8	Line Service Action
	Run Keyword If	${CheckColumnName}	Run Keyword
	...	Table Cell Should Contain	${TABLE_BASE_CONFIG}	2	8	NA
	Click Element	${LINE_SERVICE_ACTION_BOX}
	Wait Until Page Contains Element	${LINE_SERVICE_ACTION_DD}
	Select From List By Label	${LINE_SERVICE_ACTION_DD}	${ActionToDo}
	Capture ScreenShot	${Numbering}	Line Service-OCC Non Provide Journey
	
Create Active Directory Integration Product
	Wait Until Page Contains	Product Family:	${waiting_time}
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Build Order']
	Click Element	productSearch
	Click Element	xpath=.//a[normalize-space(.)='Active Directory Integration']
	Click Button	submit
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	Capture ScreenShot	${Numbering}	Create Active Directory Integration Product
	Click Element	continue-to-quote-details
	#Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}
	Wait Until Page Contains Element	xpath=.//tbody//td	${waiting_time}
	Wait Until Page Does Not Contain	xpath=.//td[@class='validity pending validating']	${waiting_time}

Active Directory Integration Config
	Wait Until Page Contains Element	${CBOX_LIST_QUOTE_OPT_DETAILS}	${waiting_time}
	#Click Element	${CBOX_LIST_QUOTE_OPT_DETAILS}
	Select Checkbox	listOfQuoteOptionItems
	#Wait Until Element Is Visible	${BTN_IMPORT_PRODUCT}	120s
	#Click Element	${BTN_IMPORT_PRODUCT}
	#Wait Until Page Contains	Upload work book	${waiting_time}
	#Choose File	eCRFSheet	${EXECDIR}\\${BCMSheet}
	#Click Element	importProductUpload
	#Wait Until Page Contains Element	close	${waiting_time}
	#Capture Page Screenshot		${OUTPUTDIR}${/}${Numbering}-Upload BCMSheet.png
	#${Numbering}=	Evaluate	str(${Numbering}+1)
	#Click Element	close
	#Page Should Contain Element	xpath=.//td[text()='VALID']		#UPDATED IN R54
	
RemoveModify Product
	Wait Until Page Contains	Product Family:	${waiting_time}
	Click Element	ModifyProducts
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Create Contract']
	Click Element	productSearch
	Wait Until Element Is Visible	xpath=html/body/ul[3]/li/a	${waiting_time}
	Click Element	xpath=html/body/ul[3]/li/a
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Wait Until Element Is Enabled	${REMOVEMODIFY}	${waiting_time}
	Capture ScreenShot	${Numbering}	RemoveModifyProduct
	Click Element	${REMOVEMODIFY}
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	Click Element	continue-to-quote-details
	#Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}
	Wait Until Page Contains Element	xpath=.//tbody//td	${waiting_time}
	Wait Until Page Does Not Contain	xpath=.//td[@class='validity pending validating']	${waiting_time}

Product List Selection
    [Arguments]    ${statusDesc}	${statusColumn}    ${checkBoxColumn}
	${row} =	Get Row By Cell Text	${MODIFY_PRODUCT_LIST}	${statusDesc}	${statusColumn}
	${checkText}	Get Text	${MODIFY_PRODUCT_LIST}[${row}]/td[${statusColumn}]
	Run Keyword And Return If  '${checkText}'=='${statusDesc}'      Checkbox Should Not Be Selected    xpath=.${MODIFY_PRODUCT_LIST}[${row}]/td[${checkBoxColumn}]/input	


Select Order Fr List
    [Arguments]    ${statusDesc}	${statusColumn}    ${checkBoxColumn}
	${row} =	Get Row By Cell Text	${MODIFY_PRODUCT_LIST}	${statusDesc}	${statusColumn}
	${checkText}	Get Text	${MODIFY_PRODUCT_LIST}[${row}]/td[${statusColumn}]
	Run Keyword If    '${checkText}'=='${statusDesc}'	Click CheckBox    xpath=.${MODIFY_PRODUCT_LIST}[${row}]/td[${checkBoxColumn}]/input
	Checkbox Should Be Selected    xpath=.${MODIFY_PRODUCT_LIST}[${row}]/td[${checkBoxColumn}]/input

Get Table Row Count
    [Arguments]    ${rowLocator}
    Run Keyword And Return    Get Matching Xpath Count    ${rowLocator}
       
    
Get Row By Cell Text
    [Arguments]    ${rowLocator}    ${cellText}    ${column}
    [Return]    ${rowNumber}
     ${rowCount}    Get Table Row Count    ${rowLocator}
    :FOR    ${rowIndex}    IN Range    1    ${rowCount}+1
    \    ${currText}    Get Text    ${rowLocator}[${rowIndex}]/td[${column}]
    \    Exit For Loop If    '${cellText}' == '${currText}'
    ${rowNumber}    Set Variable   ${rowIndex} 
    
Click CheckBox
    [Arguments]    ${checkBox}
    Click Element    ${checkBox}

	
Modify ActiveDir Product
	Wait Until Page Contains	Product Family:	${waiting_time}
	Click Element	ModifyProducts
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Click Element	categoryGroupSearch
	Click Element	xpath=.//a[text()='One Cloud']
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Click Element	categorySearch
	Click Element	xpath=.//a[text()='One Cloud Cisco-Build Order']
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Click Element	productSearch
	Click Element	xpath=.//a[contains(text(),'Active Directory Integration')]
	Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
	Wait Until Element Is Visible    ${MODIFY_PRODUCT_LIST}    300s
	Wait Until ELEMENT Is Enabled    xpath=.//table[@id='siteTable']/tbody/tr[1]/td[1]    ${waiting_time}
	${checkSelected}=    Product List Selection   IN_SERVICE	3	1
	Run Keyword unless   ${checkSelected}    Select Order Fr List    IN_SERVICE	3	1
	Wait Until Element Is Enabled	${REMOVEMODIFY}	${waiting_time}
	Capture ScreenShot	${Numbering}	ModifyProduct
	Click Element	${REMOVEMODIFY}
	Wait Until Element Is Not Visible	${CREATING_PRODUCT}	${waiting_time}
	${Numbering}=	Evaluate	str(${Numbering}+1)
    #Wait Until Element Is Not Visible	${LOADING_MESSAGE}	${waiting_time}
    
Modify Internet Service Access
	Click Element	bulkConfigurationButton
	Wait Until Page Contains Element	xpath=.//tbody/tr[1]/td/div/div	${waiting_time}
	Capture ScreenShot	${Numbering}	Before Modify Internet Service Access
	Key-In Text	${ISA_NO_CONCUR_SESSIONS}	${ISA_NO_CONCUR_SESSIONS_INPUT}	\\127
	Key-In Text	${ISA_NO_CONCUR_SESSIONS}	${ISA_NO_CONCUR_SESSIONS_INPUT}	2
	Key-In Text	${ISA_NO_REGISTRATION}	${ISA_NO_REGISTRATION_INPUT}	\\127
	Key-In Text	${ISA_NO_REGISTRATION}	${ISA_NO_REGISTRATION_INPUT}	2
	Click Button	SaveButton
	Wait Until Page Does Not Contain Element	${PROCESS_LOADING}	${wait_time}
	Capture ScreenShot	${Numbering}	After Modify Internet Service Access
	
Finalise Config
	Wait Until Element Is Enabled	quoteOption	${waiting_time}
	Click Element	quoteOption
	
Calculate Price
	#Capture Page Screenshot
	Wait Until Page Contains Element	${CBOX_LIST_QUOTE_OPT_DETAILS}	${waiting_time}
	#Click Element	${CBOX_LIST_QUOTE_OPT_DETAILS}
	Select Checkbox	listOfQuoteOptionItems
	${PriceFirm}=	Run Keyword And Return Status	Page Should Contain Element	xpath=.//td[@class='pricingStatus'][text()='Firm']
	Run Keyword Unless	${PriceFirm}	Run Keyword	Click Link	fetchPrices
	Wait Until Element Is Visible	xpath=.//td[contains(text(),'Firm')]	${waiting_time}
	Capture Page Screenshot		${OUTPUTDIR}${/}${Numbering}-Price Firm.png
	${Numbering}=	Evaluate	str(${Numbering}+1)
	Click Link	QuoteOptionPricingTab
	Wait Until Element Is Not Visible	xpath=.//*[@id='loadingMessage']	${waiting_time}
	Wait Until Element Is Not Visible	xpath=.//*[@id='priceLines_processing']	${waiting_time}
	Capture Page Screenshot		${OUTPUTDIR}${/}${Numbering}-Pricing Sheet in rSQE.png
	${Numbering}=	Evaluate	str(${Numbering}+1)
	Click Link	QuoteOptionDetailsTab
	Wait Until Element Is Not Visible	xpath=.//*[@id='loadingMessage']	${waiting_time}
	Wait Until Element Is Not Visible	xpath=.//*[@id='lineItems_processing']	${waiting_time}
	Wait Until Element Is Visible	xpath=.//td[contains(text(),'VALID')]	${waiting_time}

Calculate Pricing
	Wait Until Element Is Not Visible	${PROCESSING_MESSAGE}	${wait_time}
	Wait Until Element Is Enabled	fetchPrices
	${ConfiguredNotValid}=	Run Keyword And Return Status	Page Should Not Contain Element	xpath=.//td[contains(@class,'validity')][text()='VALID']
	#Run Keyword If	${ConfiguredNotValid}	Run Keyword	Validate Products	Valid
	${orderDoesNotExist}=	Run Keyword And Return Status	Page Should Not Contain Element	OrdersTab
	Run Keyword If	${orderDoesNotExist}	Run Keywords
	...	Run Keyword If	${ConfiguredNotValid}	Run Keyword	Check OrderType For Pricing
	...	AND	Confirm Pricing
	...	AND	Create Offer and Order
	...	ELSE	Click Link	OrdersTab
	
Check OrderType For Pricing
	Run Keyword If	'${OrderType}' == 'Cease'	Run Keyword	
	...	Validate Products	N/A	
	...	ELSE	Validate Products	Valid
	
Confirm Pricing
	${PriceNotFirm}=	Run Keyword And Return Status	Page Should Not Contain Element	xpath=.//td[@class='pricingStatus'][text()='Firm']
	Run Keyword If	${PriceNotFirm}	Run Keyword	Click Link	fetchPrices
	Run Keyword If	'${OrderType}' == 'Cease'	Run Keyword	Wait Until Element Is Visible	xpath=.//td[@class='pricingStatus'][text()='N/A']	${waiting_time}
	...	ELSE	Wait Until Element Is Visible	xpath=.//td[@class='pricingStatus'][text()='Firm']	${waiting_time}
	Capture ScreenShot	${Numbering}	Price Calculated

Create Offer and Order
	Wait Until Element Is Enabled	createOffer
	${TestRunCount}=	Get File 	C:\\Jenkins\\TestRunCount.txt	#${EXECDIR}\\TestRunCount.txt
	${TestRunCount}=	Evaluate	str(${TestRunCount}-1)
	Select Checkbox	listOfQuoteOptionItems
	Click Link	createOffer
	Page Should Contain Textfield	offerNameText
	Input Text	offerNameText	${offerName}${TestRunCount}
	Input Text	customerOrderRefText	${customerOrderRefText}${TestRunCount}
	Click Button	submitOffer
	Wait Until Element Is Enabled	xpath=.//img[@alt='Customer Approve']	${waiting_time}
	Capture ScreenShot	${Numbering}	Create Offer
	Click Image    Customer Approve
	Wait Until Page Contains Element	cancelApproval	${waiting_time}
	Wait Until Element Is Enabled	xpath=.//*[@id='offers']//td[1]	${waiting_time}
	Capture ScreenShot	${Numbering}	Customer Approve
	Click Element	xpath=.//*[@id='offers']//td[1]
	Wait Until Element Is Not Visible	xpath=.//*[@id='loadingMessage']	${waiting_time}
	Wait Until Element Is Not Visible	xpath=.//*[@id='offerDetails_processing']	${waiting_time}
	Select Checkbox	listOfOfferItems
	Click Link	createOrder
	Page Should Contain Textfield	orderName
	Input Text	orderName	${orderNameText}${TestRunCount}
	Click Button	submitCreateOrder
	Wait Until Element Is Not Visible	${STATUS_LOADING}	${waiting_time}	
		
RFO Sheet Download and Upload
	#Configure Order
	Wait Until Element Is Visible	xpath=.//*[contains(text(),'RFO invalid')]	1200s
	Run Keyword If	'${Browser}' == 'IE'	
	...	Run Keywords	
	...	Download RFOSheet IE
	...	AND	Upload RFOSheet IE
	...	ELSE If    '${Browser}' == 'FF'    Wait Until Keyword Succeeds	30s	1s
	...	Run Keywords
	...	Download RFOSheet FF
	...	AND	Upload RFOSheet FF
	...    ELSE    Wait Until Keyword Succeeds	30s	1s
	...    Run Keywords
	...    Download RFOSheet Chrome
	...    AND	Upload RFOSheet Chrome   
	
Submit Order
	Sleep	9s
	Wait Until Element Is Not Visible	${STATUS_LOADING}	${waiting_time}	
	Wait Until Element Is Visible	xpath=.//a[text()='Submit Order']	${waiting_time}	
	Click Element	xpath=.//a[text()='Submit Order']
	Wait Until Page Contains Element	${STATUS_SUBMITTED}	10m
	Capture ScreenShot	${Numbering}	Submit Order
	
Download RFOSheet FF
    Empty Directory	C:\\Jenkins\\RFOSheets
    Click Image    Export RFO
	Capture ScreenShot	${Numbering}	Download RFOSheet
	Wait Until Element Is Visible	export-rfo-sheet-msg	20s
	Click Element	${BTN_OK_RFO}
	Edit Excel RFOSheet	#call keywords

Download RFOSheet Chrome
	Empty Directory	C:\\Jenkins\\RFOSheets
	Wait Until Element Is Enabled    ${RFO_EXPORT_ICON}    60s
	click Image    ${RFO_EXPORT_ICON}
	Capture ScreenShot	${Numbering}	Download RFOSheet
	Wait Until Element Is Visible	export-rfo-sheet-msg	20s
	Click Element	${BTN_OK_RFO}
	Edit Excel RFOSheet	#call keywords	
	
Download RFOSheet IE
	Click Image    Export RFO
	Wait Until Element Is Visible	export-rfo-sheet-msg	${waiting_time}
	Click Element	${BTN_OK_RFO}
	Edit Excel RFOSheet	#call keywords
	
Save RFOSheet
	Send	^s
	Win Close	${RFOSheet} - Excel
	Sleep	5s
	Send	{ENTER}
	
Upload RFOSheet IE
	Double Click Element	rfoImport
	Wait Until Element Is Visible	rfoSheet	60s
	Double Click Element	rfoSheet
	Win Activate	Choose File to Upload
	Send	${EXECDIR}\\${RFOSheet}
	Send	{ENTER}
	Click Element	uploadButton
	Select Window	title=Showing Quote Option
	Wait Until Page Contains	Upload Successful	120s
	Click Button	xpath=.//span[text()='Done']/..
	Wait Until Element Is Enabled	xpath=.//a[text()='Submit Order']	60s
	
	
Upload RFOSheet Chrome
	Wait Until Element Is Enabled    ${RFO_IMPORT_ICON}    60s
	Click Image    ${RFO_IMPORT_ICON}
	Choose File	xpath=(.//input[@id='rfoSheet'])[last()]	C:\\Jenkins\\RFOSheets\\${RFOSheet}
	Wait Until Element Is Enabled	uploadButton	${waiting_time}
	Click Element	uploadButton
	Select Window	title=Showing Quote Option
	Wait Until Page Contains	Upload Successful	120s
	Click Button	xpath=.//span[text()='Done']/..
	Wait Until Element Is Enabled	xpath=.//a[text()='Submit Order']	60s
	
Upload RFOSheet FF
 	Click Image    Import RFO
#	Click Element	rfoSheet
#	Win Activate	File Upload
#	Send	${EXECDIR}\\${RFOSheet}
#	Send	{ENTER}
	Choose File	xpath=(.//input[@id='rfoSheet'])[last()]	C:\\Jenkins\\RFOSheets\\${RFOSheet}
	Wait Until Element Is Enabled	uploadButton	${waiting_time}
	Click Element	uploadButton
	Wait Until Page Contains Element	${UPLOAD_SUCCESSFUL}	${waiting_time}
	Capture ScreenShot	${Numbering}	Upload RFOSheet
	Wait Until Element Is Enabled	xpath=.//span[text()='Done']/..	${waiting_time}
	Click Button	xpath=.//span[text()='Done']/..
	Wait Until Element Is Enabled	xpath=.//a[text()='Submit Order']	${waiting_time}
	
Configure Order
	${year}	${month}	${day}=	Get Time	year,month,day
	Wait Until Element Is Visible	xpath=.//*[contains(text(),'RFO invalid')]	1200s
	Wait Until Element Is Visible	xpath=.//*[@id='orderName']	${waiting_time}
	Capture ScreenShot	${Numbering}	PreUpload RFOSheet
	Click Element	xpath=.//img[@alt='Export RFO']
	
Key-In Text	[Arguments]	${fieldToClick}	${fieldToKeyIn}	${textToKeyIn}
	${textFieldVisible}=	Run Keyword And Return Status	Element Should Be Visible	${fieldToKeyIn}
	Run Keyword Unless	${textFieldVisible}	Click Element	${fieldToClick}
	Focus	${fieldToKeyIn}
	Press Key	${fieldToKeyIn}	${textToKeyIn}