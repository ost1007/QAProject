*** Settings ***
Documentation		Read and Write Excel xlsx. Does not support xls
...					Prerequisite: openpyxl library
...					Created by:	FKH
...					Date:	6 April 2017
...					Edited by:	..... 
Library		Selenium2Library
Library		DebugLibrary
#Resource	ReadExcel.py
#Library		ReadExcel.ExcelUtility
#Library		update_excel.ExcelUtility
Library		openpyxl.reader.excel
Library		openpyxl.writer.excel
Library		OperatingSystem
Library		String
#Library		ExcelLibrary

*** Variables ***
${sheetName}	Q2O
${TC_ID}	TC042

*** Keywords ***
Read data	[Arguments]	${sheetName}	${TC_ID}
	#${wb}=	load_workbook	${EXECDIR}\\HCS_VMM_Data_Sheet.xlsx	data_only=True	#load excel file.
	${wb}=	load_workbook	${EXECDIR}\\Cloud_TestData.xlsx	data_only=True	#load excel file.
	${ws}=	set variable	${wb["${sheetName}"]}	#select sheet name
	${excelColumn}=	set variable	${ws.max_column}	#get max column
	${excelRow}=	set variable	${ws.max_row}		#get max row
	#Log To Console	${\n}${excelColumn}bla bla bla ${ws['A2'].value}
	:FOR	${index}	IN RANGE	${excelRow}	#to find row equal to given TC_ID
	\	${TC_ID_TEMP}=	set variable	${ws['A${index+1}'].value}
	\	Run Keyword If	"${TC_ID_TEMP}"=="${TC_ID}"	Set Test Variable	${rowNum}	${index+1}
	\	Run Keyword If	"${TC_ID_TEMP}"=="${TC_ID}"	Exit For Loop
	
	:FOR	${index}	IN RANGE	${excelColumn}	#to assign test data to variable
	\	${tempVariableName}=	set variable	${ws.cell(row=1,column=${index+1}).value}	#go through row 1 and get the variable name
	\	${regex}=	Run Keyword If	"${tempVariableName}"!="${None}"	Get Regexp Matches	${tempVariableName}	^[d][A-Z]{1,2}.*	ELSE	Continue For Loop	#regelur expression to find cell with variable format
	\	${blnResults}=	Run Keyword And Return Status	Should Not Be Empty	${regex}	#to filter regex it not empty
	\	Run Keyword Unless	${blnResults}	Continue For Loop	#if regex is empty skip index
	\	${regex}=	Run Keyword If	${regex} or ${blnResults}	Set Variable	${regex[0]}	ELSE	Continue For Loop	#convert regex variable from array to single value
	\	${regex}=	Strip String	${regex}	left	d									#to remove letter d variable name in test data excel file
	\	${tempValue}=	set variable	${ws.cell(row=${rowNum},column=${index+1}).value}	#get cell value of given TC_ID
	\	Set Global Variable	${${regex}}	${tempValue}	#assign cell value to variable name
	\	Log To Console	${regex}= ${tempValue}

	#@{arrRole}=	Split String	${dRole}	|	#to separate test data that have more than 1 value in excel cell using delimiter |
	#@{arrJobTitle}=	Split String	${dJobTitle}	|
	#@{arrFirstName}=	Split String	${dFirstName}	|
	#@{arrLastName}=	Split String	${dLastName}	|
	#@{arrEmail}=	Split String	${dEMail}	|
	#@{dPhoneNumber}=	Split String	${dPhoneNumber}	|
	
	#Log To Console	"\n"arrRole= @{arrRole}
	#Log To Console	"\n"arrJobTitle= @{arrJobTitle}
	#Log To Console	"\n"arrFirstName= @{arrFirstName}
	#Log To Console	"\n"arrLastName= @{arrLastName}
	#Log To Console	"\n"arrEmail= @{arrEmail}
	#Log To Console	"\n"dPhoneNumber= @{dPhoneNumber}
	Log To Console	\n ${QuoteID}
	
Write data	[Arguments]	${sheetName}	${varToWrite}	${valueToWrite}
	${wb}=	load_workbook	${EXECDIR}\\HCS_VMM_Data_Sheet2.xlsx		#load excel file.
	${ws}=	set variable	${wb["${sheetName}"]}		#select sheet name
	${excelColumn}=	set variable	${ws.max_column}	#get max column
	${excelRow}=	set variable	${ws.max_row}		#get max row
	:FOR	${index}	IN RANGE	${excelRow}			#to find row equal to given TC_ID
	\	${TC_ID_TEMP}=	set variable	${ws['A${index+1}'].value}
	\	Run Keyword If	"${TC_ID_TEMP}"=="${TC_ID}"	Set Test Variable	${rowNum}	${index+1}
	\	Run Keyword If	"${TC_ID_TEMP}"=="${TC_ID}"	Exit For Loop
	
	:FOR	${index}	IN RANGE	${excelColumn}											#to assign test data to variable
	\	${tempVariableName}=	set variable	${ws.cell(row=1,column=${index+1}).value}	#go through row 1 and get the variable name
	\	${regex}=	Run Keyword If	"${tempVariableName}"!="${None}"	Get Regexp Matches	${tempVariableName}	^[d][A-Z]{1,2}.*	ELSE	Continue For Loop	#regelur expression to find cell with variable format
	\	${blnResults}=	Run Keyword And Return Status	Should Not Be Empty	${regex}		#to filter regex it not empty
	\	Run Keyword Unless	${blnResults}	Continue For Loop								#if regex is empty skip index
	\	${regex}=	Run Keyword If	${regex} or ${blnResults}	Set Variable	${regex[0]}	ELSE	Continue For Loop	#convert regex variable from array to single value
	\	${regex}=	Strip String	${regex}	left	d									#to remove letter d variable name in test data excel file
	\	Run Keyword Unless	'${regex}'=='${varToWrite}'	Continue For Loop					#skip current index looping if column is not same with given variable
	\	${selectedCell}=	Set Variable	${ws.cell(row=${rowNum}, column=${index+1})}	#assign cell into variable
	\	${selectedCell.value}=	set variable	${valueToWrite}								#assign value to cell
	\	save_workbook	${wb}	${EXECDIR}\\HCS_VMM_Data_Sheet2.xlsx						#save excel file
	\	Exit For Loop																		#exit loop 
	
*** Test Cases ***
Test run
	Read data	${sheetName}	${TC_ID}
	#Write data	${sheetName}	QuoteID	00000022211
	