*** Settings ***
Documentation     A resource file with reusable keywords and variables.
...
...               The system specific keywords created here form our own
...               domain specific language. They utilize keywords provided
...               by the imported Selenium2Library.
Library           Selenium2Library
Library           DebugLibrary
Library           OperatingSystem
#Library			  AutoItLibrary
#Library			  SikuliLibrary
#Library			  DateTime
Resource		../../Common_OV/CommonResources.txt
Variables		../../Common_OV/CommonVariables.py
Variables        TahitiLocators.py

*** Variables ***
#${local_ie_driver}	IEDriverServer.exe
${BROWSER}        ie
#${FF_PROFILE}     C:/ff_profile
#${DELAY}          0.6
${T3_TAHITI}      http://10.29.79.76:61017/TahitiPortal/index.jsp
${TXT_USERNAME}	user
${TXT_PWD}	password
${USERNAME}	ZAINUDNA
${PWD}	nurazry3
#${BTN_LOGIN}	xpath=html/body/form/div[1]/table/tbody/tr/td/table/tbody/tr[4]/td[1]/input
${BTN_YES_LEGAL}	YES

#Test Data
${CUSTOMERID}	5752
${CUSTOMERNAME}	R52NOR007
#${ORDERSTATUS_ORDERLIST}	New Order
#${ID_ORDERLIST}	943
#Test Data

#iframe Menu
${LINK_MYORDERS}	opm1

#iframe Content

#${TXT_FILTER_STATUS_ORDERLIST}	xpath=.//*[@id='FilterMyOrders03']/input
#${TXT_FILTER_ID_ORDERLIST}	xpath=.//*[@id='FilterMyOrders01']/input

${ORDERSTATUS_TASKINSERVICE}	Execution

#option button 1

#option button 3
#${OPT_ID_MYORDERS}	xpath=.//*[@id='MyOrders_table']/tbody/tr[3]/td[1]/input
#option button 4
#${OPT_ID_MYORDERS}	xpath=.//*[@id='MyOrders_table']/tbody/tr[4]/td[1]/input
${BTN_ORDERDETAIL}	button0    

${OPT_TASKID}	IdNumber
${BTN_YANKTASK}	button1
${BTN_ENDTASK}	BotonEnd

#Order Search
${BTN_ORDERSEARCH}    button1
${TXT_SEARCH}    txtSearch
${ORDERID}    1150097  #1150156 1150097 1150156 1150063
${BTN_SEARCH}    button1
${LIST_ORDERTABLE}    orderTable_table

${FORM_ORDERDETAIL}    orderDetail
${FORM_SERVICELIST}    ec
${RBTN_1STORDER}    xpath=.//*[@id='orderTable_table']/tbody/tr/td[1]/input


${TASK_FOR_SERVICE_LIST}	//table[@id='ec_table']/tbody/tr
${TXT_TRUNK_WHITE_LIST}    xpath=.//*[@name='att1030069507']/input

#"


${TXT_SWITCH_NNNN_CODE}    xpath=//table[@id='elem1000167451']/tr[@class='roweven']/td/input[@name='att1030069425']
${TXT_IPMS_SRN}    xpath=//table[@id='elem1000167450']/tr[@class='roweven']/td/input[@name='att1030069408']
${TXT_IPMS_ENTERPRISE_ID}    xpath=//table[@id='elem1000167450']/tr[@class='filaimpar']/td/input[@name='att1030069410']
${TXT_IPMS_ORD_NUM}    xpath=//table[@id='elem1000167450']/tr[@class='crudmand']/td/input[@name='att1030069418']

${CBO_CUST_ACT_SUPPORT_NO}    xpath=.//table[@id='grpFull Service/CPE Test']/tr[@class='roweven']/td/select[@id='att1']/option[text()='NO']
${CBO_SERV_TEST_REQ_YES}    xpath=.//table[@id='grpService Test']/tr[@class='filaimpar']/td/select[@id='att5']/option[text()='YES']
${CBO_FULL_SERV_CPE_TEST_NO}    xpath=.//table[@id='grpFull Service/CPE Test']/tr[@class='roweven']/td/select[@id='att3']/option[text()='NO']
${DATE_PICKER_FULL_SERV_CPE_TEST}    xpath=.//table[@id='grpFull Service/CPE Test']/tr[@class='filaimpar']/td/table/tr/td/INPUT[@id='268443630']/a[@alt='Date']


*** Keywords ***
Open Browser to Tahiti Login Page
    #Set Environment Variable	no_proxy	127.0.0.1
	#Set Environment Variable	webdriver.ie.driver	${local_ie_driver}
    Browser Config	${T3_TAHITI}
	Goto	${T3_TAHITI}
    Maximize Browser Window
    Set Selenium Speed    ${DELAY}
    Wait Until Element Is Visible	${BTN_LOGIN}
	Input Username Password
    
Input Username Password
    Input Text	${TXT_USERNAME}	${USERNAME}
    Input Text	${TXT_PWD}	${PWD}
    #Debug    
	Submit Credentials
   
Submit Credentials
    Log to console    Click on Login button
    Click Element    ${BTN_LOGIN}
    Wait Until Element Is Visible	${BTN_YES_LEGAL}    ${waiting_time}
    Log to console    Click on Legal Yes button
    #Legal warning screen
    Click Element	${BTN_YES_LEGAL}
          
#Process My Orders
Navigate to My Orders
	Wait Until Element Is Enabled	${IFRAME_MENU}
	Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-Default_page.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
	Select Frame	${IFRAME_MENU}
	Wait Until Element Is Enabled    ${LINK_MYORDERS}
	Click Element	${LINK_MYORDERS}
	Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-MyOrders_page.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}
	#Select Window	title=Tahiti Portal
	UnSelect Frame
	Select Frame	${IFRAME_CONTENT}
	Wait Until Element Is Visible	${BTN_ORDERDETAIL}
	

Search By Order Search
    Click Element    ${BTN_ORDERSEARCH}
    Wait Until Element Is Enabled    ${TXT_SEARCH}
    Input Text    ${TXT_SEARCH}    ${ORDER_ID}
    Click Element    ${BTN_SEARCH}
    Wait Until Element Is Enabled    ${LIST_ORDERTABLE}
	Select Radio Button    Id    prueba
	Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-OrderSelected.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Wait Until Element Is Enabled    ${BTN_ORDERDETAIL2}    1m    Order Detail Button is not available
    Click Element    ${BTN_ORDERDETAIL2}
	${NotPresent}=  Run Keyword And Return Status    Element Should Not Be Visible   ${FORM_ORDERDETAIL}
	log to console    NotPresent= ${NotPresent}
    Run Keyword If    ${NotPresent}    Click Element    ${BTN_ORDERDETAIL2}
	Wait Until Element is Visible    ${FORM_ORDERDETAIL}    1m    Order Details List is not shown. 
	Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-OrderDetailsElementShown.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}
	
Search By Customer	
	Input Text	${TXT_FILTER_CUSTOMERID_ORDERLIST}	${CUSTOMERID}
	Input Text	${TXT_FILTER_CUSTOMERNAME_ORDERLIST}	${CUSTOMERNAME}
	#Input Text	${TXT_FILTER_STATUS_ORDERLIST}	${ORDERSTATUS_ORDERLIST}
	#Input Text	${TXT_FILTER_ID_ORDERLIST}	${ID_ORDERLIST}
	Click Element	${BTN_FILER}
	#Loop to only click New Order Status Orders
	${statusCount}=	Get Matching Xpath Count	.//*[contains(text(),'${CUSTOMERID}')]
	Set Global Variable	${statusCount}
	Run Keyword Unless	'${statusCount}' == '0'	Select Order

Select OV Service
    Wait Until Element is Visible    ${FORM_SERVICELIST}
    Click Element    xpath=.//a[contains(text(),'GONEV-')]
    Wait Until Element Is Visible   Table1
    Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-OrdersDetails_page.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}

Select And Process Task
    Click Element    ${LINK_ALL_TASKS}
    ${TaskId}    Get TaskId
    Process Tasks    ${TaskId}

Get TaskId
    [Return]   ${TaskIdTrim} 
    ${TaskIdFull}=    Get Text	${TASK_FOR_SERVICE_LIST}[1]/td[2]    
    ${TaskIdTrim}=    Get Substring    ${TaskIdFull}	0    -1
    

Process Tasks
    [Arguments]    ${TaskId}
    :FOR    ${currCount}    IN Range    3    15   
    \    log to console    loop ${currCount}
    \    ${SubTaskId}    Generate SubTaskId    ${TaskId}    ${currCount}
    \    log to console    SubTaskId is ${SubTaskId}
    \    Task Validation    ${SubTaskId}   2    1 
    #\   any speical condition to Exit For Loop
   
  
Execute Task
    Log to console    Executing Execute Task Function
    [Arguments]    ${SubTaskId}
    ${checkSelected}=    Task Validation    ${SubTaskId}    2    1
    log to console    checkSelected is ${checkSelected}
    Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-OrdersDetails_page.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}
	Run Keyword unless   ${checkSelected}    Select Order Fr List    ${SubTaskId}    2    1
	Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-SelectedTask.png
	${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}
    Wait Until Element Is Visible	${BTN_YANKTASK}	${waiting_time}
    Yank Task    ${SubTaskId}
    End Task    

Generate SubTaskId    
    [Arguments]    ${TaskId}    ${currCount}
    [Return]    ${currTaskId}
   ${currTaskId}=    Set Variable    ${TaskId}${currCount}
   log to console    currTaskId is ${currTaskId}
   
Task Validation
    [Documentation]	@author 607253786
	...    @Description 
    [Arguments]    ${currTaskId}	${taskIdColumn}    ${checkBoxColumn}
    
	${row} =	Get Row By Cell Text	${TASK_FOR_SERVICE_LIST}	${currTaskId}	${taskIdColumn}
	${checkText}	Get Text	${TASK_FOR_SERVICE_LIST}[${row}]/td[${taskIdColumn}]
	${taskDescColumn}=    Evaluate    ${taskIdColumn}+1
	${taskStatusColumn}=    Evaluate    ${taskIdColumn}+2
	${taskDesc}	Get Text	${TASK_FOR_SERVICE_LIST}[${row}]/td[${taskDescColumn}]
	Set Global Variable    ${taskDesc}
	${taskStatus}	Get Text	${TASK_FOR_SERVICE_LIST}[${row}]/td[${taskStatusColumn}]
	log to console     taskDescColumn is ${taskDescColumn}, taskDesc is ${taskDesc}, taskStatusColumn is ${taskStatusColumn}, taskStatus is ${taskStatus}
	#add condition here to check if taskdesc is automation or last job, exit the task .
	${AutomaticTask}=  Run Keyword And Return Status    Should Be Equal As Strings    ${taskDesc}    Automatic Port Allocation
    ${AutomaticActivation}=    Run Keyword And Return Status    Should Be Equal As Strings    ${taskDesc}	Automatic Service Activation   
    ${LastTask}=    Run Keyword And Return Status    Should Be Equal As Strings    ${taskDesc}	Confirm Sub Project Completion
    ${EndedTask}=    Run Keyword And Return Status    Should Be Equal As Strings    ${taskStatus}	Ended
   
    Log to console   AutomaticTask is ${AutomaticTask} AutomaticActivation is ${AutomaticActivation} LastTask is ${LastTask} EndedTask is ${EndedTask}
    Run Keyword If	'${AutomaticTask}'\ \ == \ \ 'False' and \ \ '${AutomaticActivation}'\ \ == \ \ 'False' and \ \ '${LastTask}'\ \ == \ \ 'False' and \ \ '${EndedTask}'\ \ == \ \ 'False'    Task Selection    ${checkText}    ${currTaskId}    ${row}    ${checkBoxColumn}    ${taskIdColumn} 
   
      
Task Selection    
    [Arguments]    ${checkText}    ${currTaskId}    ${row}    ${checkBoxColumn}    ${taskIdColumn}
    Log to console    Start Task Selection
    Run Keyword If  '${checkText}'=='${currTaskId}'      Checkbox Should Not Be Selected    xpath=.${TASK_FOR_SERVICE_LIST}[${row}]/td[${checkBoxColumn}]/input
    Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-checkbox_selection.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}
    Select Order Fr List    ${currTaskId}    ${taskIdColumn}    ${checkBoxColumn}
    Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-orderCheckboxSelected.png
    ${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering}
    Yank Task    ${currTaskId}


Select CheckBox from List
    [Documentation]	@author 607253786
	...    @Description 
    [Arguments]    ${ColumnValue}	${Column}    ${checkBoxColumn}
	${row} =	Get Row By Cell Text	${TASK_FOR_SERVICE_LIST}	${ColumnValue}	${Column}
	${checkText}	Get Text	${TASK_FOR_SERVICE_LIST}[${row}]/td[${Column}]
	Run Keyword And Return If  '${checkText}'=='${ColumnValue}'      Checkbox Should Not Be Selected    xpath=.${TASK_FOR_SERVICE_LIST}[${row}]/td[${checkBoxColumn}]/input	


Select Order Fr List
    [Documentation]	@author 607253786
	...    @Description Function to select the correc torder from the list
    [Arguments]    ${currTaskId}	${taskIdColumn}    ${checkBoxColumn}
	${row} =	Get Row By Cell Text	${TASK_FOR_SERVICE_LIST}	${currTaskId}	${taskIdColumn}
	${checkText}	Get Text	${TASK_FOR_SERVICE_LIST}[${row}]/td[${taskIdColumn}]
	log to console    checkbox xpath is .${TASK_FOR_SERVICE_LIST}[${row}]/td[${checkBoxColumn}]/input
	Run Keyword If    '${checkText}'=='${currTaskId}'	Click CheckBox    xpath=.${TASK_FOR_SERVICE_LIST}[${row}]/td[${checkBoxColumn}]/input
	Checkbox Should Be Selected    xpath=.${TASK_FOR_SERVICE_LIST}[${row}]/td[${checkBoxColumn}]/input


Get Table Row Count
    [Documentation]	@author 607253786
	...    @Description Function to get the table row count
    [Arguments]    ${rowLocator}
    Run Keyword And Return    Get Matching Xpath Count    ${rowLocator}
       
    
Get Row By Cell Text
    [Documentation]	@author 607253786
	...    @Description Function to get the row by cell text
    [Arguments]    ${rowLocator}    ${cellText}    ${column}
    [Return]    ${rowNumber}
     ${rowCount}    Get Table Row Count    ${rowLocator}
     #${loopCount}    Evaluate    ${rowCount}+1
    :FOR    ${rowIndex}    IN Range    1    ${rowCount}+1
    \    ${currText}    Get Text    ${rowLocator}[${rowIndex}]/td[${column}]
    \    Run Keyword If	'${cellText}' == '${currText}'	Exit For Loop
    \    Run Keyword If    '${rowIndex}'\ \ == \ \ '${rowCount}' and \ \ '${cellText}'\ \ != \ \ '${currText}'    Hold and Wait for Task    ${rowLocator}    ${cellText}    ${column}
    ${rowNumber}    Set Variable   ${rowIndex}   
    
    
Hold and Wait for Task
    [Arguments]    ${rowLocator}    ${cellText}    ${column}
   #:FOR	${index}	IN RANGE	30
    Sleep    10m
    Get Row By Cell Text    ${rowLocator}    ${cellText}    ${column}
    

    
Click CheckBox
    [Documentation]	@author 607253786
	...    @Description 
    [Arguments]    ${checkBox}
    Click Element    ${checkBox}
    Capture Page Screenshot		${OUTPUTDIR}${/}${timeStamp}${/}${Numbering}-OrderCheckboxChecked.png
	${Numbering}=	Evaluate	str(${Numbering}+1)
    Set Global Variable	${Numbering} 
           

Select Order
	:FOR	${indexOrder}	IN RANGE	${statusCount}
	\	Wait Until Element Is Visible	${BTN_ORDERDETAIL}
	\	Click Element	${OPT_ID_MYORDERS}
	\	Debug
	\	Click Button	${BTN_ORDERDETAIL}
	\	Run Keyword	Select Service Number

Select Service Number
	Wait Until Element Is Visible	${LINK_SERVICENUMBER}	30
    Click Element	${LINK_SERVICENUMBER}
    Wait Until Element Is Visible	${LINK_ALLTASKS}
    Click Element	${LINK_ALLTASKS}
    Tasks In Service
    
Tasks In Service
    Wait Until Element Is Visible	${OPT_TASKID}
    Input Text	${TXT_FILTER_STATUS_TASKINSERVICE}	${ORDERSTATUS_TASKINSERVICE}
    Click Element	${BTN_FILER}
    ${statusExecutionCount}=	Get Matching Xpath Count	.//*[contains(text(),'Execution')]
    Set Global Variable	${statusExecutionCount}
    Run Keyword Unless	'${statusExecutionCount}' == '0'	Select Task ID
    
Select Task ID
	:FOR	${indexTASK}	IN RANGE	${statusExecutionCount}
	\	Check Feedback Message
	\	Log	${msgUseClassic}
	\	Run Keyword If	${msgUseClassic}=='True'
	\	...	Run Keywords	
	\	...	Unselect Frame
	\	...	AND	Select Frame	${IFRAME_MENU}	
	\	...	AND	Click Element	${LINK_MYORDERS}	
	\	...	AND	Exit For Loop
	\	Click Element	${OPT_TASKID}
	\	Run Keyword	Yank Task	
	
    #Click Element	${OPT_TASKID}
    
Yank Task
    [Arguments]    ${SubTaskId}
  #  ${EndTaskBtnNotPresent}=  Run Keyword And Return Status    Element Should Not Be Visible   ${BTN_ENDTASK}
#	log to console    NotPresent= ${EndTaskBtnNotPresent}
   #Run Keyword If    ${EndTaskBtnNotPresent}    Click Element    ${BTN_YANKTASK}
   
    #Wait Until Element Is Enabled    	${BTN_YANKTASK}	${waiting_time}
    ${YankTaskButtonEnabled}=    Run Keyword And Return Status    Element Should be Enabled    ${BTN_YANKTASK}    
    Run Keyword If    ${YankTaskButtonEnabled}    Process Task Via All Task    ELSE       Process Task Via Service Overview    ${SubTaskId}   
   
Process Task Via All Task
    Click Element    ${BTN_YANKTASK}
     ${NotPresent2}=  Run Keyword And Return Status    Element Should Not Be Visible   ${FORM_ORDERDETAIL}
	log to console    NotPresent2= ${NotPresent2}
#    Run Keyword If    ${NotPresent2}    Click Element    ${BTN_YANKTASK}
   # Wait Until Element Is Enabled   ${TXT_TRUNK_WHITE_LIST} 
    Click End Task Button  
  
   

Process Task Via Service Overview
    [Arguments]    ${SubTaskId}
    Unselect Frame        
    Select Frame    ${IFRAME_ARIADNETHREAD}
    Click Link    ${LINK_SERV_OVERVIEW}
    Unselect Frame
    Select Frame    ${IFRAME_CONTENT}
    #Wait    5s
    Wait until Element is Visible    ${LINK_ALL_TASKS}
    Wait Until Element is Visible    Table1
    Click Element    xpath=.//strong[text()='${SubTaskId}']
    Click End Task Button
    
Click End Task Button
    Wait Until Element is Visible    ${BTN_ENDTASK}
    #if  Plan & Assign Primary Global Network Resource (Provide)
    Input Yank Task
    End Task    
    
End Task
	#Wait Until Element Is Visible	${BTN_ENDTASK}	${waiting_time}
	${EndTaskBtnEnabled}=  Run Keyword And Return Status	Element Should Be Enabled	${BTN_ENDTASK}
	Run Keyword if    ${EndTaskBtnEnabled}    Click Element  ${BTN_ENDTASK}
    Unselect Frame        
    Select Frame    ${IFRAME_ARIADNETHREAD}
    Click Link    ${LINK_SERV_OVERVIEW} 
    UnSelect Frame
	Select Frame	${IFRAME_CONTENT}
    Click Element    ${LINK_ALL_TASKS}

#	Run Keyword If 	${yankBtnEnabled}=='True'	Click Element	${BTN_ENDTASK}
#	...	ELSE	Click Element	${LINK_BREADCRUMBSTASKINSERVICE}
	
#	Check Feedback Message
	
#	Run Keyword If	Element Should Be Visible	${LINK_FEEDBACKYES}	Click Element	${LINK_FEEDBACKYES}
    

Check Feedback Message
    ${msgUseClassic}=  Run Keyword And Return Status	Element Should Be Visible	${TXT_FEEDBACK_USECLASSIC}
    Set Global Variable	${msgUseClassic}
    
Input Yank Task
    Run Keyword if    '${taskDesc}'=='Plan & Assign Primary Global Networ'    Input Plan Assign Primary Global Network
    Run Keyword if    '${taskDesc}'=='Select & schedule tests requir'    Select Schedule Tests Required
    
    
    
Select Schedule Tests Required
    #task 5
    UnSelect Frame
	Select Frame	${IFRAME_CONTENT}    
    Click Element    ${CBO_CUST_ACT_SUPPORT_NO}
    Click Element    ${CBO_FULL_SERV_CPE_TEST_NO}
    #Full Service CPE Test  thsi one needed if full service cpe test is yes
    Click Element    ${CBO_SERV_TEST_REQ_YES}


Input Plan Assign Primary Global Network
    #task 3
    UnSelect Frame
	Select Frame	${IFRAME_CONTENT}    
    Input Text	${TXT_TRUNK_WHITE_LIST}	TWL_${timeStamp}
    Input Text	${TXT_SWITCH_NNNN_CODE}	SNC_${timeStamp}
    Input Text	${TXT_IPMS_SRN}	IPMS_SRN_${timeStamp}
    Input Text	${TXT_IPMS_ENTERPRISE_ID}	IPMS_ETP_${timeStamp}
    Input Text	${TXT_IPMS_ORD_NUM}	IPMS_ORD_${timeStamp}
    
    
Full Service CPE Test
    Click Element    ${CBO_FULL_SERV_CPE_TEST_NO}
    Click Element    ${DATE_PICKER_FULL_SERV_CPE_TEST}
    #ensure DateTime Picker page shown
    #select a date
